[gd_scene load_steps=3 format=3 uid="uid://b5quk5jybqi1m"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_autnt"]
size = Vector2(578, 568)

[sub_resource type="GDScript" id="GDScript_f60cv"]
script/source = "extends Node2D

var image1: CompressedTexture2D
var image2: CompressedTexture2D
var image3: CompressedTexture2D
var image4: CompressedTexture2D
var image5: CompressedTexture2D
var image6: CompressedTexture2D
var Dice_main: Node2D
var image: CompressedTexture2D
var count = 0
var counter = 0
var cube_face = 0 #номер изабражения грани кубика для передачи дальше
var gotov = 0
signal cubu_gotov


# Called when the node enters the scene tree for the first time.
func _ready():
	image1 = load(\"res://Dice_sprites/Player/Cleric.png\")
	image2 = load(\"res://Dice_sprites/Player/Guardian.png\")
	image3 = load(\"res://Dice_sprites/Player/Magician.png\")
	image4 = load(\"res://Dice_sprites/Player/Scroll.png\")
	image5 = load(\"res://Dice_sprites/Player/Thief.png\")
	image6 = load(\"res://Dice_sprites/Player/Warrior.png\")
	
	# загрузка текстур картинок
	


func fall_dice(): #падение кубика
	# время задержки для показывания картинки при перелистывании
	$Timer_busting.start(0.2)
	# выбор рандомного числа от 1 до 6
	var random_number = randi() % 6 + 1
	count = random_number
	_on_timer_busting_timeout()
	cube_face = random_number
	
func busting_the_dice(i):
	# показ картинок граней
	var random_number = i
	if random_number == 1 or random_number == 7:
		image = image1
	elif random_number == 2 or random_number == 8:
		image = image2
	elif random_number == 3 or random_number == 9:
		image = image3
	elif random_number == 4 or random_number == 10:
		image = image4
	elif random_number == 5 or random_number == 11:
		image = image5
	elif random_number == 6 or random_number == 12:
		image = image6
	else:
		print(\"error\",random_number)
	# установка выбранной картинки видимой
	$Sprite2D.texture = image
	# выбор соответствующей картинки
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass


func _on_timer_busting_timeout():
	# циклическая переборка картинок и их показ
	if counter < 6:
		counter += 1
		count += 1
		# запуск показа картинок граней
		busting_the_dice(count)
	else :
		# остановка таймера и переборки картинок
		gotov = 1
		counter = 0
		$Timer_busting.stop()
		# передача сигнала о готовности куба и его значение
		emit_signal(\"cubu_gotov\",cube_face,gotov)
		
"

[node name="Dice" type="Node2D"]
metadata/_edit_group_ = true

[node name="RigidBody2D" type="RigidBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="RigidBody2D"]
shape = SubResource("RectangleShape2D_autnt")

[node name="Dice_main" type="Sprite2D" parent="."]
unique_name_in_owner = true
scale = Vector2(0.5, 0.5)
script = SubResource("GDScript_f60cv")

[node name="Timer_busting" type="Timer" parent="Dice_main"]
process_mode = 1
wait_time = 0.2

[node name="Button" type="Button" parent="Dice_main"]
visible = false
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -267.5
offset_top = -245.5
offset_right = 239.5
offset_bottom = 255.5
grow_horizontal = 2
grow_vertical = 2
rotation = 0.00179119
pivot_offset = Vector2(258, 248)

[node name="Sprite2D" type="Sprite2D" parent="Dice_main"]

[connection signal="timeout" from="Dice_main/Timer_busting" to="Dice_main" method="_on_timer_busting_timeout"]
